security:
    
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
   
    # declaraction de l encodeur on precise à symfonu que nous allons encoder un parametre
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        users_in_memory: { memory: null }


     #on indique à symfony ou sont stockes les data user en bdd et quelles propriétés controler(email)
        in_database:
           entity:
               class: App\Entity\User
               property: email
    #firewalls  indique la partie du site protégée et par quel moyen
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

            #main represente le contenu du site 
        main:
            anonymous: lazy

            # le firewall main sera protégé avec les données stockees en bdd sur la table user 
            provider: in_database

            # on indique que le site est prétogé par un loging (form de connexion) 


            form_login: 
            #loging_path dis a symfony ou est le form de connexio,
                login_path: security_login
            # check_path dis quelle route ou les données doivent etre controlles apres saisie

                check_path: security_login

            # logout se deconnecte
                logout:
                  path: security_logout
                  target: blog
                  # qd deconnecté rediriger vers article 



                    # activate different ways to authenticate
                    # https://symfony.com/doc/current/security.html#firewalls-authentication

                    # https://symfony.com/doc/current/security/impersonating_user.html
                    # switch_user: true

            # Easy way to control access for large sections of your site
            # Note: Only the *first* access control that matches will be used
    access_control:
                # - { path: ^/admin, roles: ROLE_ADMIN }
                # - { path: ^/profile, roles: ROLE_USER }


        