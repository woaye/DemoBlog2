{% extends 'base.html.twig' %}

{% block title %}Blog Symfony | Articles{% endblock %}

{% block body %}

    <h1 class="display-4 text-center my-4">Liste des articles</h1>

    <div class="row d-flex justify-content-around">

        {# FOR est une boucle / commande de TWIG, ici nous avons receptionné 10 articles de la BDD donc nous devons passer en revue ces 10 articles via la boucle FOR #}
        {# La variable 'articles' provient du controller 'BlogController' et de la méthode 'index()' ($this->render(['articles'])), elle contient les 10 articles selectionnés en BDD #}
        {# data est une variable de reception qui receptionne un article par tour de boucle #}
        {# ex: 1er tour : article n°1 #}
        {# ex: 2ème tour : article n°2 #}
        {# ex: 3ème tour : article n° 3 etc... #}

        {% for data in articles %}
    
            <div class="card mb-2 text-center" style="width: 18rem;">
                <img src="{{ data.image }}" class="card-img-top" alt="...">
                {# nous piochons dans notre variable data avec le point '.' afin d'afficher l'image, le titre, le contenu et la date de l'article #}
                <div class="card-body">
                    <h5 class="card-title">{{ data.title }}</h5>
                    <p class="card-text">{{ data.content|raw }}</p>
                    {# raw : filtre TWIG qui permet d'echapper les balises HTML stockées en BDD <p></p> et d'afficher le texte brut #}
                    <hr>
                    <p>Posté le {{ data.createAt|date("d/m/Y") }} à {{ data.createAt|date("H:i:s") }}</p>

                    {# La date est renvoyée par la BDD sous form d'objet DateTime, donc il n'est pas possible de l'afficher comme ceci : data.createdAt, un objet ne peut être convertit en une chaine de caractère #}
                    {# Nous devons pour cela utiliser un filtre TWIG #}
                    {# date() est un filtre TWIG permettant de convertir un objet DateTime en une chaine de caractère #}
                    {#  date('d/m/Y') --> date('jour/mois/année') #}
                    {#  date('H:i:s') --> date('heure/minute/seconde') #}

                    <a href="{{ path('blog_show', {'id': data.id } ) }}" class="btn btn-dark">Voir le détail</a>
                    {# path('blog_show') : nom de la route pour le détail d'un article définit dans la méthode show() du controller 'BlogController' #}
                    {# La route 'blog_show' permet de voir le détail d'un article et cette route attend un paramètre de type 'id' dans l'URL donc il faut fournir en 2ème argument de la méthode path() l'id de l'article #}
                </div>
            </div>

        {% endfor %}
    
    </div>

{% endblock %}